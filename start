# Filename: start
# Author: CorQB
# Created: January 4, 2019
# Modified: January 5, 2019
#
# This script is used to start two functions, 1) a command which listens to
# an active log file and reports to 2) a bot which posts given strings from
# the logfile to a webhook. This script is meant to be used with the repository
# https://github.com/destruc7i0n/shulker to make bot startup easier to automate.

#Edit these values with your unique environment variables

MCSERVER="/opt/msm/servers/webbcraft/"
RCONIP="localhost"
RCONPORT="8000"
SHULKERPATH="/opt/msm/discord/shulker/"

# Functions to fall back on if command grouping isn't working
#
# Node-via-Yarn
# yarnstart() { exec &> logs/yarn.log
#                echo date
#                cd $SHULKERPATH
#                yarn start
#                }
#
# listenerstart() { exec &> logs/listener.log
#                    echo date
#                    tail -F /$MCSERVER/logs/latest.log | /
#                    grep --line-buffered ": <" | while read x ; do echo -ne $x | / 
#                    curl -X POST -d @- http://$RCONIP:$RCONPORT/minecraft/hook ; done
#                    }
#                    


exec &> logs/start.log
echo date 
echo "Beginning Log"

# Call node.js

if pidof -x "dsbot" >/dev/null; then
    echo "Bot is already running. Everything is OK."
else
    echo "Calling node.js..."
    screen -d -m -S "dsbot" { 
        exec &> logs/yarn.log
        echo date
        cd $SHULKERPATH
        yarn start 
    }
fi

# Verify node start

if pidof -x "dsbot" >/dev/null; then
echo "Bot started correctly."
else echo "Bot failed to start: check yarn.log for more information."
fi


# Start listener

if pidof -x "listener" >/dev/null; then
    echo "Listener is already running. Everything is OK."
else
    echo "Starting listener..."
    screen -d -m -S "listener" { 
    exec &> logs/listener.log ; echo date ; tail -F /$MCSERVER/logs/latest.log | /
    grep --line-buffered ": <" | while read x ; do echo -ne $x | /
    curl -X POST -d @- http://$RCONIP:$RCONPORT/minecraft/hook ; done 
    }
fi

# Verify listener start

if pidof -x "listener" >/dev/null; then
echo "Listener Started."
else echo "Error: Check listener.log for more information."
fi

done
